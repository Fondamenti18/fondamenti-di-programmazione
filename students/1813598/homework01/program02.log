============================= test session starts ==============================
platform linux -- Python 3.6.3, pytest-3.7.0, py-1.5.2, pluggy-0.7.1 -- /home/travis/virtualenv/python3.6.3/bin/python
cachedir: .pytest_cache
rootdir: /home/travis/build/Fondamenti18/fondamenti-di-programmazione/students/1813598/homework01, inifile:
plugins: timeout-1.3.1, json-0.4.0
timeout: 10.0s
timeout method: signal
timeout func_only: False
collecting ... collected 14 items

grade02.py::Test::test_program_1 PASSED                                  [  7%]
grade02.py::Test::test_program_10 PASSED                                 [ 14%]
grade02.py::Test::test_program_11 PASSED                                 [ 21%]
grade02.py::Test::test_program_12 PASSED                                 [ 28%]
grade02.py::Test::test_program_13 PASSED                                 [ 35%]
grade02.py::Test::test_program_14 PASSED                                 [ 42%]
grade02.py::Test::test_program_2 PASSED                                  [ 50%]
grade02.py::Test::test_program_3 PASSED                                  [ 57%]
grade02.py::Test::test_program_4 PASSED                                  [ 64%]
grade02.py::Test::test_program_5 PASSED                                  [ 71%]
grade02.py::Test::test_program_6 PASSED                                  [ 78%]
grade02.py::Test::test_program_7 FAILED                                  [ 85%]
grade02.py::Test::test_program_8 FAILED                                  [ 92%]
grade02.py::Test::test_program_9 FAILED                                  [100%]

=================================== FAILURES ===================================
_____________________________ Test.test_program_7 ______________________________

self = <grade02.Test testMethod=test_program_7>

    def test_program_7(self):
        "numero grande con molte elisioni e non-elisioni"
        num      = 981008818
        expected = 'novecentottantunomilioniottomilaottocentodiciotto'
>       return self.dotest02(num, expected)

grade02.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
program02.py:67: in conv
    return conv(int(n/1000000))+"milioni" +conv(n%1000000)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 981

    def conv(n):
        if n <= 19:
            return ("uno", "due", "tre", "quattro", "cinque",
                    "sei", "sette", "otto", "nove", "dieci",
                    "undici", "dodici", "tredici",
                    "quattordici", "quindici", "sedici",
                    "diciassette", "diciotto", "diciannove")[n-1]
        elif n <= 99:
            decine = ("venti", "trenta", "quaranta",
                      "cinquanta", "sessanta",
                      "settanta", "ottanta", "novanta")
            scrittura= decine[int(n/10)-2]
            d = n%10
            if d == 1 or d== 8:
                scrittura = scrittura[:-1]
            return scrittura+ conv(n%10)
        elif n <= 199:
            return "cento" + conv(n%100)
        elif n <= 999:
            c= n%100
            c= int(c/10)
            scrittura = "cento"
            if c== 8:
>               scrittura = scrittura - "o"
E               TypeError: unsupported operand type(s) for -: 'str' and 'str'

program02.py:58: TypeError
_____________________________ Test.test_program_8 ______________________________

self = <grade02.Test testMethod=test_program_8>

    def test_program_8(self):
        "elisioni 800-80 e 80-8"
        num      = 888888888
        expected = 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'
>       return self.dotest02(num, expected)

grade02.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
program02.py:67: in conv
    return conv(int(n/1000000))+"milioni" +conv(n%1000000)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 888

    def conv(n):
        if n <= 19:
            return ("uno", "due", "tre", "quattro", "cinque",
                    "sei", "sette", "otto", "nove", "dieci",
                    "undici", "dodici", "tredici",
                    "quattordici", "quindici", "sedici",
                    "diciassette", "diciotto", "diciannove")[n-1]
        elif n <= 99:
            decine = ("venti", "trenta", "quaranta",
                      "cinquanta", "sessanta",
                      "settanta", "ottanta", "novanta")
            scrittura= decine[int(n/10)-2]
            d = n%10
            if d == 1 or d== 8:
                scrittura = scrittura[:-1]
            return scrittura+ conv(n%10)
        elif n <= 199:
            return "cento" + conv(n%100)
        elif n <= 999:
            c= n%100
            c= int(c/10)
            scrittura = "cento"
            if c== 8:
>               scrittura = scrittura - "o"
E               TypeError: unsupported operand type(s) for -: 'str' and 'str'

program02.py:58: TypeError
_____________________________ Test.test_program_9 ______________________________

self = <grade02.Test testMethod=test_program_9>

    def test_program_9(self):
        'non elisioni 800-8 e elisioni 800-80'
        num      = 808080808080
        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'
>       return self.dotest02(num, expected)

grade02.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'otto[13 chars]ardiottantadiciannovemilioniottocentoottomilaottantadiciannove' != 'otto[13 chars]ardiottantamilioniottocentoottomilaottanta'
E   - ottocentoottomiliardiottantadiciannovemilioniottocentoottomilaottantadiciannove
E   ?                             ----------                               ----------
E   + ottocentoottomiliardiottantamilioniottocentoottomilaottanta
E    : 	when input=(808080808080,) 
E   		'ottocentoottomiliardiottantadiciannovemilioniottocentoottomilaottantadiciannove' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'	<- correct return value
 generated json report: /home/travis/build/Fondamenti18/fondamenti-di-programmazione/students/1813598/homework01/program02.log.json 
===================== 3 failed, 11 passed in 0.11 seconds ======================
