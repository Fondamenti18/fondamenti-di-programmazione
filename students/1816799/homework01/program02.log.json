{"report": {"environment": {"Python": "3.6.3", "Platform": "Linux-4.14.12-041412-generic-x86_64-with-debian-jessie-sid"}, "tests": [{"name": "grade02.py::Test::test_program_1", "duration": 0.0031938552856445312, "run_index": 0, "setup": {"name": "setup", "duration": 0.0013492107391357422, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002887248992919922, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0002067089080810547, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_10", "duration": 0.0011713504791259766, "run_index": 1, "setup": {"name": "setup", "duration": 0.0003662109375, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00025081634521484375, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001881122589111328, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_11", "duration": 0.0009496212005615234, "run_index": 2, "setup": {"name": "setup", "duration": 0.0002586841583251953, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002467632293701172, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018548965454101562, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_12", "duration": 0.0009417533874511719, "run_index": 3, "setup": {"name": "setup", "duration": 0.0002536773681640625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002446174621582031, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018978118896484375, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_13", "duration": 0.001073598861694336, "run_index": 4, "setup": {"name": "setup", "duration": 0.00025463104248046875, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0003731250762939453, "outcome": "passed", "stdout": "quattordici\ntredicimila\ndodicimilioni\nundicimiliardi\n"}, "teardown": {"name": "teardown", "duration": 0.00019121170043945312, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_14", "duration": 0.001962900161743164, "run_index": 5, "setup": {"name": "setup", "duration": 0.0002593994140625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0012364387512207031, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_14>\n\n    def test_program_14(self):\n        'numero massimo da convertire'\n        num      = 99999999999\n        expected = 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'\n>       return self.dotest02(num, expected)\n\ngrade02.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'novantnovemiliardinovecentonovantnovemilioninov[35 chars]nove' != 'novantanovemiliardinovecentonovantanovemilionin[39 chars]nove'\nE   - novantnovemiliardinovecentonovantnovemilioninovecentonovantnovemilanovecentonovantnove\nE   + novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove\nE   ?       +                           +                          +                       +\nE    : \twhen input=(99999999999,) \nE   \t\t'novantnovemiliardinovecentonovantnovemilioninovecentonovantnovemilanovecentonovantnove' != 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00020766258239746094, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_2", "duration": 0.0010673999786376953, "run_index": 6, "setup": {"name": "setup", "duration": 0.0002722740173339844, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0003237724304199219, "outcome": "passed", "stdout": "diciassette\n"}, "teardown": {"name": "teardown", "duration": 0.0001990795135498047, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_3", "duration": 0.0009398460388183594, "run_index": 7, "setup": {"name": "setup", "duration": 0.00025534629821777344, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00024318695068359375, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018596649169921875, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_4", "duration": 0.0009443759918212891, "run_index": 8, "setup": {"name": "setup", "duration": 0.000255584716796875, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00024819374084472656, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001850128173828125, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_5", "duration": 0.0009462833404541016, "run_index": 9, "setup": {"name": "setup", "duration": 0.0002593994140625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00024437904357910156, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018310546875, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_6", "duration": 0.000997781753540039, "run_index": 10, "setup": {"name": "setup", "duration": 0.00025963783264160156, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00028967857360839844, "outcome": "passed", "stdout": "diciassettemila\n"}, "teardown": {"name": "teardown", "duration": 0.0001888275146484375, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_7", "duration": 0.0014197826385498047, "run_index": 11, "setup": {"name": "setup", "duration": 0.0002574920654296875, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0006959438323974609, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_7>\n\n    def test_program_7(self):\n        \"numero grande con molte elisioni e non-elisioni\"\n        num      = 981008818\n        expected = 'novecentottantunomilioniottomilaottocentodiciotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'novecentoottantunomilioniottomilaottocentodiciotto' != 'novecentottantunomilioniottomilaottocentodiciotto'\nE   - novecentoottantunomilioniottomilaottocentodiciotto\nE   ?         -\nE   + novecentottantunomilioniottomilaottocentodiciotto\nE    : \twhen input=(981008818,) \nE   \t\t'novecentoottantunomilioniottomilaottocentodiciotto' != 'novecentottantunomilioniottomilaottocentodiciotto'\t<- correct return value", "stdout": "ottocentodiciotto\n"}, "teardown": {"name": "teardown", "duration": 0.00020885467529296875, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_8", "duration": 0.0017588138580322266, "run_index": 12, "setup": {"name": "setup", "duration": 0.0002589225769042969, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0010383129119873047, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_8>\n\n    def test_program_8(self):\n        \"elisioni 800-80 e 80-8\"\n        num      = 888888888\n        expected = 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto' != 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\nE   - ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto\nE   ?         -                          -                      -\nE   + ottocentottantottomilioniottocentottantottomilaottocentottantotto\nE    : \twhen input=(888888888,) \nE   \t\t'ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto' != 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00020265579223632812, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_9", "duration": 0.0018172264099121094, "run_index": 13, "setup": {"name": "setup", "duration": 0.0002620220184326172, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0007426738739013672, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_9>\n\n    def test_program_9(self):\n        'non elisioni 800-8 e elisioni 800-80'\n        num      = 808080808080\n        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\n>       return self.dotest02(num, expected)\n\ngrade02.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'ottocentoottomiliardiottantmilioniottocentoottomilaottant' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\nE   - ottocentoottomiliardiottantmilioniottocentoottomilaottant\nE   + ottocentoottomiliardiottantamilioniottocentoottomilaottanta\nE   ?                            +                              +\nE    : \twhen input=(808080808080,) \nE   \t\t'ottocentoottomiliardiottantmilioniottocentoottomilaottant' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0005505084991455078, "outcome": "passed"}, "outcome": "failed"}], "summary": {"passed": 10, "failed": 4, "num_tests": 14, "duration": 0.18680429458618164}, "created_at": "2018-08-01 00:31:18.331789"}}