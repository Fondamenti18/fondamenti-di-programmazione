============================= test session starts ==============================
platform linux -- Python 3.6.3, pytest-3.7.0, py-1.5.2, pluggy-0.7.1 -- /home/travis/virtualenv/python3.6.3/bin/python
cachedir: .pytest_cache
rootdir: /home/travis/build/Fondamenti18/fondamenti-di-programmazione/students/1816799/homework01, inifile:
plugins: timeout-1.3.1, json-0.4.0
timeout: 10.0s
timeout method: signal
timeout func_only: False
collecting ... collected 14 items

grade02.py::Test::test_program_1 PASSED                                  [  7%]
grade02.py::Test::test_program_10 PASSED                                 [ 14%]
grade02.py::Test::test_program_11 PASSED                                 [ 21%]
grade02.py::Test::test_program_12 PASSED                                 [ 28%]
grade02.py::Test::test_program_13 PASSED                                 [ 35%]
grade02.py::Test::test_program_14 FAILED                                 [ 42%]
grade02.py::Test::test_program_2 PASSED                                  [ 50%]
grade02.py::Test::test_program_3 PASSED                                  [ 57%]
grade02.py::Test::test_program_4 PASSED                                  [ 64%]
grade02.py::Test::test_program_5 PASSED                                  [ 71%]
grade02.py::Test::test_program_6 PASSED                                  [ 78%]
grade02.py::Test::test_program_7 FAILED                                  [ 85%]
grade02.py::Test::test_program_8 FAILED                                  [ 92%]
grade02.py::Test::test_program_9 FAILED                                  [100%]

=================================== FAILURES ===================================
_____________________________ Test.test_program_14 _____________________________

self = <grade02.Test testMethod=test_program_14>

    def test_program_14(self):
        'numero massimo da convertire'
        num      = 99999999999
        expected = 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'
>       return self.dotest02(num, expected)

grade02.py:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'novantnovemiliardinovecentonovantnovemilioninov[35 chars]nove' != 'novantanovemiliardinovecentonovantanovemilionin[39 chars]nove'
E   - novantnovemiliardinovecentonovantnovemilioninovecentonovantnovemilanovecentonovantnove
E   + novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove
E   ?       +                           +                          +                       +
E    : 	when input=(99999999999,) 
E   		'novantnovemiliardinovecentonovantnovemilioninovecentonovantnovemilanovecentonovantnove' != 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'	<- correct return value
_____________________________ Test.test_program_7 ______________________________

self = <grade02.Test testMethod=test_program_7>

    def test_program_7(self):
        "numero grande con molte elisioni e non-elisioni"
        num      = 981008818
        expected = 'novecentottantunomilioniottomilaottocentodiciotto'
>       return self.dotest02(num, expected)

grade02.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'novecentoottantunomilioniottomilaottocentodiciotto' != 'novecentottantunomilioniottomilaottocentodiciotto'
E   - novecentoottantunomilioniottomilaottocentodiciotto
E   ?         -
E   + novecentottantunomilioniottomilaottocentodiciotto
E    : 	when input=(981008818,) 
E   		'novecentoottantunomilioniottomilaottocentodiciotto' != 'novecentottantunomilioniottomilaottocentodiciotto'	<- correct return value
----------------------------- Captured stdout call -----------------------------
ottocentodiciotto
_____________________________ Test.test_program_8 ______________________________

self = <grade02.Test testMethod=test_program_8>

    def test_program_8(self):
        "elisioni 800-80 e 80-8"
        num      = 888888888
        expected = 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'
>       return self.dotest02(num, expected)

grade02.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto' != 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'
E   - ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto
E   ?         -                          -                      -
E   + ottocentottantottomilioniottocentottantottomilaottocentottantotto
E    : 	when input=(888888888,) 
E   		'ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto' != 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'	<- correct return value
_____________________________ Test.test_program_9 ______________________________

self = <grade02.Test testMethod=test_program_9>

    def test_program_9(self):
        'non elisioni 800-8 e elisioni 800-80'
        num      = 808080808080
        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'
>       return self.dotest02(num, expected)

grade02.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'ottocentoottomiliardiottantmilioniottocentoottomilaottant' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'
E   - ottocentoottomiliardiottantmilioniottocentoottomilaottant
E   + ottocentoottomiliardiottantamilioniottocentoottomilaottanta
E   ?                            +                              +
E    : 	when input=(808080808080,) 
E   		'ottocentoottomiliardiottantmilioniottocentoottomilaottant' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'	<- correct return value
 generated json report: /home/travis/build/Fondamenti18/fondamenti-di-programmazione/students/1816799/homework01/program02.log.json 
===================== 4 failed, 10 passed in 0.19 seconds ======================
