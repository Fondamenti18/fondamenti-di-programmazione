============================= test session starts ==============================
platform linux -- Python 3.6.3, pytest-3.7.0, py-1.5.2, pluggy-0.7.1 -- /home/travis/virtualenv/python3.6.3/bin/python
cachedir: .pytest_cache
rootdir: /home/travis/build/Fondamenti18/fondamenti-di-programmazione/students/1805772/homework01, inifile:
plugins: timeout-1.3.1, json-0.4.0
timeout: 10.0s
timeout method: signal
timeout func_only: False
collecting ... collected 14 items

grade02.py::Test::test_program_1 PASSED                                  [  7%]
grade02.py::Test::test_program_10 FAILED                                 [ 14%]
grade02.py::Test::test_program_11 FAILED                                 [ 21%]
grade02.py::Test::test_program_12 FAILED                                 [ 28%]
grade02.py::Test::test_program_13 FAILED                                 [ 35%]
grade02.py::Test::test_program_14 FAILED                                 [ 42%]
grade02.py::Test::test_program_2 PASSED                                  [ 50%]
grade02.py::Test::test_program_3 PASSED                                  [ 57%]
grade02.py::Test::test_program_4 PASSED                                  [ 64%]
grade02.py::Test::test_program_5 PASSED                                  [ 71%]
grade02.py::Test::test_program_6 FAILED                                  [ 78%]
grade02.py::Test::test_program_7 FAILED                                  [ 85%]
grade02.py::Test::test_program_8 FAILED                                  [ 92%]
grade02.py::Test::test_program_9 FAILED                                  [100%]

=================================== FAILURES ===================================
_____________________________ Test.test_program_10 _____________________________

self = <grade02.Test testMethod=test_program_10>

    def test_program_10(self):
        'non elisioni 800-1 e elisioni 80-1'
        num      = 801081801081
        expected = 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'
>       return self.dotest02(num, expected)

grade02.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 801081801081

    def conv(n):
    
        copia = n   #modificando uno non modifico l'altro
        parola = ''
    
        ventina = ('uno' , 'due' , 'tre' , 'quattro' , 'cinque' , 'sei' , 'sette' , 'otto' , 'nove' , 'dieci' , 'undici' , 'dodici' , 'tredici' , 'quattordici' , 'quindici' , 'sedici' , 'diciassette' , 'diciotto' , 'diciannove' )
        decine = ('vent' , 'trent' , 'quarant' , 'cinquant' , 'sessant' , 'settant' , 'ottant' , 'novant')
        centinaia = ('cento' , 'duecento' , 'trecento' , 'quattorcento' , 'cinquecento' , 'seicento' , 'settecento' , 'ottocento' , 'novecento')
        bandieraVenti = False
        bandieraDecine = False
        bandieraMigliaia = False
    
        if copia >= 1000 and copia <= 1999:
            parola = parola + 'mille'
            copia = copia - 1000
            bandieraMigliaia == True
        elif copia >= 2000 and copia <= 19999:
            bandieraMigliaia == True
            for x in range(2 , 19):
                if copia >= (x * 1000) and copia <= ((x * 1000) + 999):
                    parola = parola + ventina[x-1] + 'mila'
                    break
            copia = copia - (x * 1000)
    
        if copia >= 100 and copia <= 999:
            i = 0
            while i <  9:
                if copia >= ((i+1) * 100) and copia <= ((i+1) * 100 + 99):
                    parola = parola + centinaia[i]
                    break
                i = i + 1
            copia = copia - ((i+1) * 100)    #l'incremento alla riga precedente fallisce con break
    
    
        if copia >= 80 and copia < 90 and (parola == '' or bandieraMigliaia == True):
            parola = parola + 'ottant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 80 and copia < 90 and parola != '':
            parola = parola + 'ttant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 20 and copia <= 99:
            bandieraDecine == True
            i = 0
            while i <=  8:
                if copia >= ((i+2) * 10) and copia <= ((i+2) * 10 + 9):
                    parola = parola + decine[i]
                    break
                i = i + 1
            copia = copia - ((i+2) * 10)
            if i == 0:
                bandieraVenti = True
    
    
        if copia != 0:
            if (copia == 8 or copia == 1) or (copia == 8 or copia == 1 and bandieraDecine == True):
                parola = parola + ventina[copia-1]
            elif bandieraVenti == True:
                parola = parola + 'i' + ventina[copia-1]
            elif bandieraDecine == True:
                parola = parola + 'a' + ventina[copia-1]
            else:
>               parola = parola + ventina[copia-1]
E               IndexError: tuple index out of range

program02.py:97: IndexError
_____________________________ Test.test_program_11 _____________________________

self = <grade02.Test testMethod=test_program_11>

    def test_program_11(self):
        'elisioni sessanta-otto, cinquanta-otto, quaranta-otto, trenta-otto'
        num      = 68258148238
        expected = 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'
>       return self.dotest02(num, expected)

grade02.py:82: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 68258148238

    def conv(n):
    
        copia = n   #modificando uno non modifico l'altro
        parola = ''
    
        ventina = ('uno' , 'due' , 'tre' , 'quattro' , 'cinque' , 'sei' , 'sette' , 'otto' , 'nove' , 'dieci' , 'undici' , 'dodici' , 'tredici' , 'quattordici' , 'quindici' , 'sedici' , 'diciassette' , 'diciotto' , 'diciannove' )
        decine = ('vent' , 'trent' , 'quarant' , 'cinquant' , 'sessant' , 'settant' , 'ottant' , 'novant')
        centinaia = ('cento' , 'duecento' , 'trecento' , 'quattorcento' , 'cinquecento' , 'seicento' , 'settecento' , 'ottocento' , 'novecento')
        bandieraVenti = False
        bandieraDecine = False
        bandieraMigliaia = False
    
        if copia >= 1000 and copia <= 1999:
            parola = parola + 'mille'
            copia = copia - 1000
            bandieraMigliaia == True
        elif copia >= 2000 and copia <= 19999:
            bandieraMigliaia == True
            for x in range(2 , 19):
                if copia >= (x * 1000) and copia <= ((x * 1000) + 999):
                    parola = parola + ventina[x-1] + 'mila'
                    break
            copia = copia - (x * 1000)
    
        if copia >= 100 and copia <= 999:
            i = 0
            while i <  9:
                if copia >= ((i+1) * 100) and copia <= ((i+1) * 100 + 99):
                    parola = parola + centinaia[i]
                    break
                i = i + 1
            copia = copia - ((i+1) * 100)    #l'incremento alla riga precedente fallisce con break
    
    
        if copia >= 80 and copia < 90 and (parola == '' or bandieraMigliaia == True):
            parola = parola + 'ottant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 80 and copia < 90 and parola != '':
            parola = parola + 'ttant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 20 and copia <= 99:
            bandieraDecine == True
            i = 0
            while i <=  8:
                if copia >= ((i+2) * 10) and copia <= ((i+2) * 10 + 9):
                    parola = parola + decine[i]
                    break
                i = i + 1
            copia = copia - ((i+2) * 10)
            if i == 0:
                bandieraVenti = True
    
    
        if copia != 0:
            if (copia == 8 or copia == 1) or (copia == 8 or copia == 1 and bandieraDecine == True):
                parola = parola + ventina[copia-1]
            elif bandieraVenti == True:
                parola = parola + 'i' + ventina[copia-1]
            elif bandieraDecine == True:
                parola = parola + 'a' + ventina[copia-1]
            else:
>               parola = parola + ventina[copia-1]
E               IndexError: tuple index out of range

program02.py:97: IndexError
_____________________________ Test.test_program_12 _____________________________

self = <grade02.Test testMethod=test_program_12>

    def test_program_12(self):
        'elisioni ottanta-uno,settanta-uno,novanta-uno, venti-uno'
        num      = 81071091021
        expected = 'ottantunomiliardisettantunomilioninovantunomilaventuno'
>       return self.dotest02(num, expected)

grade02.py:88: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 81071091021

    def conv(n):
    
        copia = n   #modificando uno non modifico l'altro
        parola = ''
    
        ventina = ('uno' , 'due' , 'tre' , 'quattro' , 'cinque' , 'sei' , 'sette' , 'otto' , 'nove' , 'dieci' , 'undici' , 'dodici' , 'tredici' , 'quattordici' , 'quindici' , 'sedici' , 'diciassette' , 'diciotto' , 'diciannove' )
        decine = ('vent' , 'trent' , 'quarant' , 'cinquant' , 'sessant' , 'settant' , 'ottant' , 'novant')
        centinaia = ('cento' , 'duecento' , 'trecento' , 'quattorcento' , 'cinquecento' , 'seicento' , 'settecento' , 'ottocento' , 'novecento')
        bandieraVenti = False
        bandieraDecine = False
        bandieraMigliaia = False
    
        if copia >= 1000 and copia <= 1999:
            parola = parola + 'mille'
            copia = copia - 1000
            bandieraMigliaia == True
        elif copia >= 2000 and copia <= 19999:
            bandieraMigliaia == True
            for x in range(2 , 19):
                if copia >= (x * 1000) and copia <= ((x * 1000) + 999):
                    parola = parola + ventina[x-1] + 'mila'
                    break
            copia = copia - (x * 1000)
    
        if copia >= 100 and copia <= 999:
            i = 0
            while i <  9:
                if copia >= ((i+1) * 100) and copia <= ((i+1) * 100 + 99):
                    parola = parola + centinaia[i]
                    break
                i = i + 1
            copia = copia - ((i+1) * 100)    #l'incremento alla riga precedente fallisce con break
    
    
        if copia >= 80 and copia < 90 and (parola == '' or bandieraMigliaia == True):
            parola = parola + 'ottant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 80 and copia < 90 and parola != '':
            parola = parola + 'ttant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 20 and copia <= 99:
            bandieraDecine == True
            i = 0
            while i <=  8:
                if copia >= ((i+2) * 10) and copia <= ((i+2) * 10 + 9):
                    parola = parola + decine[i]
                    break
                i = i + 1
            copia = copia - ((i+2) * 10)
            if i == 0:
                bandieraVenti = True
    
    
        if copia != 0:
            if (copia == 8 or copia == 1) or (copia == 8 or copia == 1 and bandieraDecine == True):
                parola = parola + ventina[copia-1]
            elif bandieraVenti == True:
                parola = parola + 'i' + ventina[copia-1]
            elif bandieraDecine == True:
                parola = parola + 'a' + ventina[copia-1]
            else:
>               parola = parola + ventina[copia-1]
E               IndexError: tuple index out of range

program02.py:97: IndexError
_____________________________ Test.test_program_13 _____________________________

self = <grade02.Test testMethod=test_program_13>

    def test_program_13(self):
        'numeri speciali tra 10 e 20'
        num      = 11012013014
        expected = 'undicimiliardidodicimilionitredicimilaquattordici'
>       return self.dotest02(num, expected)

grade02.py:94: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 11012013014

    def conv(n):
    
        copia = n   #modificando uno non modifico l'altro
        parola = ''
    
        ventina = ('uno' , 'due' , 'tre' , 'quattro' , 'cinque' , 'sei' , 'sette' , 'otto' , 'nove' , 'dieci' , 'undici' , 'dodici' , 'tredici' , 'quattordici' , 'quindici' , 'sedici' , 'diciassette' , 'diciotto' , 'diciannove' )
        decine = ('vent' , 'trent' , 'quarant' , 'cinquant' , 'sessant' , 'settant' , 'ottant' , 'novant')
        centinaia = ('cento' , 'duecento' , 'trecento' , 'quattorcento' , 'cinquecento' , 'seicento' , 'settecento' , 'ottocento' , 'novecento')
        bandieraVenti = False
        bandieraDecine = False
        bandieraMigliaia = False
    
        if copia >= 1000 and copia <= 1999:
            parola = parola + 'mille'
            copia = copia - 1000
            bandieraMigliaia == True
        elif copia >= 2000 and copia <= 19999:
            bandieraMigliaia == True
            for x in range(2 , 19):
                if copia >= (x * 1000) and copia <= ((x * 1000) + 999):
                    parola = parola + ventina[x-1] + 'mila'
                    break
            copia = copia - (x * 1000)
    
        if copia >= 100 and copia <= 999:
            i = 0
            while i <  9:
                if copia >= ((i+1) * 100) and copia <= ((i+1) * 100 + 99):
                    parola = parola + centinaia[i]
                    break
                i = i + 1
            copia = copia - ((i+1) * 100)    #l'incremento alla riga precedente fallisce con break
    
    
        if copia >= 80 and copia < 90 and (parola == '' or bandieraMigliaia == True):
            parola = parola + 'ottant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 80 and copia < 90 and parola != '':
            parola = parola + 'ttant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 20 and copia <= 99:
            bandieraDecine == True
            i = 0
            while i <=  8:
                if copia >= ((i+2) * 10) and copia <= ((i+2) * 10 + 9):
                    parola = parola + decine[i]
                    break
                i = i + 1
            copia = copia - ((i+2) * 10)
            if i == 0:
                bandieraVenti = True
    
    
        if copia != 0:
            if (copia == 8 or copia == 1) or (copia == 8 or copia == 1 and bandieraDecine == True):
                parola = parola + ventina[copia-1]
            elif bandieraVenti == True:
                parola = parola + 'i' + ventina[copia-1]
            elif bandieraDecine == True:
                parola = parola + 'a' + ventina[copia-1]
            else:
>               parola = parola + ventina[copia-1]
E               IndexError: tuple index out of range

program02.py:97: IndexError
_____________________________ Test.test_program_14 _____________________________

self = <grade02.Test testMethod=test_program_14>

    def test_program_14(self):
        'numero massimo da convertire'
        num      = 99999999999
        expected = 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'
>       return self.dotest02(num, expected)

grade02.py:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 99999999999

    def conv(n):
    
        copia = n   #modificando uno non modifico l'altro
        parola = ''
    
        ventina = ('uno' , 'due' , 'tre' , 'quattro' , 'cinque' , 'sei' , 'sette' , 'otto' , 'nove' , 'dieci' , 'undici' , 'dodici' , 'tredici' , 'quattordici' , 'quindici' , 'sedici' , 'diciassette' , 'diciotto' , 'diciannove' )
        decine = ('vent' , 'trent' , 'quarant' , 'cinquant' , 'sessant' , 'settant' , 'ottant' , 'novant')
        centinaia = ('cento' , 'duecento' , 'trecento' , 'quattorcento' , 'cinquecento' , 'seicento' , 'settecento' , 'ottocento' , 'novecento')
        bandieraVenti = False
        bandieraDecine = False
        bandieraMigliaia = False
    
        if copia >= 1000 and copia <= 1999:
            parola = parola + 'mille'
            copia = copia - 1000
            bandieraMigliaia == True
        elif copia >= 2000 and copia <= 19999:
            bandieraMigliaia == True
            for x in range(2 , 19):
                if copia >= (x * 1000) and copia <= ((x * 1000) + 999):
                    parola = parola + ventina[x-1] + 'mila'
                    break
            copia = copia - (x * 1000)
    
        if copia >= 100 and copia <= 999:
            i = 0
            while i <  9:
                if copia >= ((i+1) * 100) and copia <= ((i+1) * 100 + 99):
                    parola = parola + centinaia[i]
                    break
                i = i + 1
            copia = copia - ((i+1) * 100)    #l'incremento alla riga precedente fallisce con break
    
    
        if copia >= 80 and copia < 90 and (parola == '' or bandieraMigliaia == True):
            parola = parola + 'ottant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 80 and copia < 90 and parola != '':
            parola = parola + 'ttant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 20 and copia <= 99:
            bandieraDecine == True
            i = 0
            while i <=  8:
                if copia >= ((i+2) * 10) and copia <= ((i+2) * 10 + 9):
                    parola = parola + decine[i]
                    break
                i = i + 1
            copia = copia - ((i+2) * 10)
            if i == 0:
                bandieraVenti = True
    
    
        if copia != 0:
            if (copia == 8 or copia == 1) or (copia == 8 or copia == 1 and bandieraDecine == True):
                parola = parola + ventina[copia-1]
            elif bandieraVenti == True:
                parola = parola + 'i' + ventina[copia-1]
            elif bandieraDecine == True:
                parola = parola + 'a' + ventina[copia-1]
            else:
>               parola = parola + ventina[copia-1]
E               IndexError: tuple index out of range

program02.py:97: IndexError
_____________________________ Test.test_program_6 ______________________________

self = <grade02.Test testMethod=test_program_6>

    def test_program_6(self):
        "non-elisione del mille e elisione di 80"
        num      = 17081
        expected = 'diciassettemilaottantuno'
>       return self.dotest02(num, expected)

grade02.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'diciassettemilattantuno' != 'diciassettemilaottantuno'
E   - diciassettemilattantuno
E   + diciassettemilaottantuno
E   ?                +
E    : 	when input=(17081,) 
E   		'diciassettemilattantuno' != 'diciassettemilaottantuno'	<- correct return value
_____________________________ Test.test_program_7 ______________________________

self = <grade02.Test testMethod=test_program_7>

    def test_program_7(self):
        "numero grande con molte elisioni e non-elisioni"
        num      = 981008818
        expected = 'novecentottantunomilioniottomilaottocentodiciotto'
>       return self.dotest02(num, expected)

grade02.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 981008818

    def conv(n):
    
        copia = n   #modificando uno non modifico l'altro
        parola = ''
    
        ventina = ('uno' , 'due' , 'tre' , 'quattro' , 'cinque' , 'sei' , 'sette' , 'otto' , 'nove' , 'dieci' , 'undici' , 'dodici' , 'tredici' , 'quattordici' , 'quindici' , 'sedici' , 'diciassette' , 'diciotto' , 'diciannove' )
        decine = ('vent' , 'trent' , 'quarant' , 'cinquant' , 'sessant' , 'settant' , 'ottant' , 'novant')
        centinaia = ('cento' , 'duecento' , 'trecento' , 'quattorcento' , 'cinquecento' , 'seicento' , 'settecento' , 'ottocento' , 'novecento')
        bandieraVenti = False
        bandieraDecine = False
        bandieraMigliaia = False
    
        if copia >= 1000 and copia <= 1999:
            parola = parola + 'mille'
            copia = copia - 1000
            bandieraMigliaia == True
        elif copia >= 2000 and copia <= 19999:
            bandieraMigliaia == True
            for x in range(2 , 19):
                if copia >= (x * 1000) and copia <= ((x * 1000) + 999):
                    parola = parola + ventina[x-1] + 'mila'
                    break
            copia = copia - (x * 1000)
    
        if copia >= 100 and copia <= 999:
            i = 0
            while i <  9:
                if copia >= ((i+1) * 100) and copia <= ((i+1) * 100 + 99):
                    parola = parola + centinaia[i]
                    break
                i = i + 1
            copia = copia - ((i+1) * 100)    #l'incremento alla riga precedente fallisce con break
    
    
        if copia >= 80 and copia < 90 and (parola == '' or bandieraMigliaia == True):
            parola = parola + 'ottant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 80 and copia < 90 and parola != '':
            parola = parola + 'ttant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 20 and copia <= 99:
            bandieraDecine == True
            i = 0
            while i <=  8:
                if copia >= ((i+2) * 10) and copia <= ((i+2) * 10 + 9):
                    parola = parola + decine[i]
                    break
                i = i + 1
            copia = copia - ((i+2) * 10)
            if i == 0:
                bandieraVenti = True
    
    
        if copia != 0:
            if (copia == 8 or copia == 1) or (copia == 8 or copia == 1 and bandieraDecine == True):
                parola = parola + ventina[copia-1]
            elif bandieraVenti == True:
                parola = parola + 'i' + ventina[copia-1]
            elif bandieraDecine == True:
                parola = parola + 'a' + ventina[copia-1]
            else:
>               parola = parola + ventina[copia-1]
E               IndexError: tuple index out of range

program02.py:97: IndexError
_____________________________ Test.test_program_8 ______________________________

self = <grade02.Test testMethod=test_program_8>

    def test_program_8(self):
        "elisioni 800-80 e 80-8"
        num      = 888888888
        expected = 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'
>       return self.dotest02(num, expected)

grade02.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 888888888

    def conv(n):
    
        copia = n   #modificando uno non modifico l'altro
        parola = ''
    
        ventina = ('uno' , 'due' , 'tre' , 'quattro' , 'cinque' , 'sei' , 'sette' , 'otto' , 'nove' , 'dieci' , 'undici' , 'dodici' , 'tredici' , 'quattordici' , 'quindici' , 'sedici' , 'diciassette' , 'diciotto' , 'diciannove' )
        decine = ('vent' , 'trent' , 'quarant' , 'cinquant' , 'sessant' , 'settant' , 'ottant' , 'novant')
        centinaia = ('cento' , 'duecento' , 'trecento' , 'quattorcento' , 'cinquecento' , 'seicento' , 'settecento' , 'ottocento' , 'novecento')
        bandieraVenti = False
        bandieraDecine = False
        bandieraMigliaia = False
    
        if copia >= 1000 and copia <= 1999:
            parola = parola + 'mille'
            copia = copia - 1000
            bandieraMigliaia == True
        elif copia >= 2000 and copia <= 19999:
            bandieraMigliaia == True
            for x in range(2 , 19):
                if copia >= (x * 1000) and copia <= ((x * 1000) + 999):
                    parola = parola + ventina[x-1] + 'mila'
                    break
            copia = copia - (x * 1000)
    
        if copia >= 100 and copia <= 999:
            i = 0
            while i <  9:
                if copia >= ((i+1) * 100) and copia <= ((i+1) * 100 + 99):
                    parola = parola + centinaia[i]
                    break
                i = i + 1
            copia = copia - ((i+1) * 100)    #l'incremento alla riga precedente fallisce con break
    
    
        if copia >= 80 and copia < 90 and (parola == '' or bandieraMigliaia == True):
            parola = parola + 'ottant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 80 and copia < 90 and parola != '':
            parola = parola + 'ttant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 20 and copia <= 99:
            bandieraDecine == True
            i = 0
            while i <=  8:
                if copia >= ((i+2) * 10) and copia <= ((i+2) * 10 + 9):
                    parola = parola + decine[i]
                    break
                i = i + 1
            copia = copia - ((i+2) * 10)
            if i == 0:
                bandieraVenti = True
    
    
        if copia != 0:
            if (copia == 8 or copia == 1) or (copia == 8 or copia == 1 and bandieraDecine == True):
                parola = parola + ventina[copia-1]
            elif bandieraVenti == True:
                parola = parola + 'i' + ventina[copia-1]
            elif bandieraDecine == True:
                parola = parola + 'a' + ventina[copia-1]
            else:
>               parola = parola + ventina[copia-1]
E               IndexError: tuple index out of range

program02.py:97: IndexError
_____________________________ Test.test_program_9 ______________________________

self = <grade02.Test testMethod=test_program_9>

    def test_program_9(self):
        'non elisioni 800-8 e elisioni 800-80'
        num      = 808080808080
        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'
>       return self.dotest02(num, expected)

grade02.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:12: in dotest02
    ret  = program.conv(*args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 808080808080

    def conv(n):
    
        copia = n   #modificando uno non modifico l'altro
        parola = ''
    
        ventina = ('uno' , 'due' , 'tre' , 'quattro' , 'cinque' , 'sei' , 'sette' , 'otto' , 'nove' , 'dieci' , 'undici' , 'dodici' , 'tredici' , 'quattordici' , 'quindici' , 'sedici' , 'diciassette' , 'diciotto' , 'diciannove' )
        decine = ('vent' , 'trent' , 'quarant' , 'cinquant' , 'sessant' , 'settant' , 'ottant' , 'novant')
        centinaia = ('cento' , 'duecento' , 'trecento' , 'quattorcento' , 'cinquecento' , 'seicento' , 'settecento' , 'ottocento' , 'novecento')
        bandieraVenti = False
        bandieraDecine = False
        bandieraMigliaia = False
    
        if copia >= 1000 and copia <= 1999:
            parola = parola + 'mille'
            copia = copia - 1000
            bandieraMigliaia == True
        elif copia >= 2000 and copia <= 19999:
            bandieraMigliaia == True
            for x in range(2 , 19):
                if copia >= (x * 1000) and copia <= ((x * 1000) + 999):
                    parola = parola + ventina[x-1] + 'mila'
                    break
            copia = copia - (x * 1000)
    
        if copia >= 100 and copia <= 999:
            i = 0
            while i <  9:
                if copia >= ((i+1) * 100) and copia <= ((i+1) * 100 + 99):
                    parola = parola + centinaia[i]
                    break
                i = i + 1
            copia = copia - ((i+1) * 100)    #l'incremento alla riga precedente fallisce con break
    
    
        if copia >= 80 and copia < 90 and (parola == '' or bandieraMigliaia == True):
            parola = parola + 'ottant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 80 and copia < 90 and parola != '':
            parola = parola + 'ttant'
            copia = copia - 80
            bandieraDecine = True
        elif copia >= 20 and copia <= 99:
            bandieraDecine == True
            i = 0
            while i <=  8:
                if copia >= ((i+2) * 10) and copia <= ((i+2) * 10 + 9):
                    parola = parola + decine[i]
                    break
                i = i + 1
            copia = copia - ((i+2) * 10)
            if i == 0:
                bandieraVenti = True
    
    
        if copia != 0:
            if (copia == 8 or copia == 1) or (copia == 8 or copia == 1 and bandieraDecine == True):
                parola = parola + ventina[copia-1]
            elif bandieraVenti == True:
                parola = parola + 'i' + ventina[copia-1]
            elif bandieraDecine == True:
                parola = parola + 'a' + ventina[copia-1]
            else:
>               parola = parola + ventina[copia-1]
E               IndexError: tuple index out of range

program02.py:97: IndexError
 generated json report: /home/travis/build/Fondamenti18/fondamenti-di-programmazione/students/1805772/homework01/program02.log.json 
====================== 9 failed, 5 passed in 0.21 seconds ======================
