{"report": {"environment": {"Python": "3.6.3", "Platform": "Linux-4.14.12-041412-generic-x86_64-with-debian-jessie-sid"}, "tests": [{"name": "grade02.py::Test::test_program_1", "duration": 0.003195047378540039, "run_index": 0, "setup": {"name": "setup", "duration": 0.0013031959533691406, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002613067626953125, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0003273487091064453, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_10", "duration": 0.0010290145874023438, "run_index": 1, "setup": {"name": "setup", "duration": 0.0002613067626953125, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002913475036621094, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_10>\n\n    def test_program_10(self):\n        'non elisioni 800-1 e elisioni 80-1'\n        num      = 801081801081\n        expected = 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: None != 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno' : \twhen input=(801081801081,) \nE   \t\tNone != 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00021505355834960938, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_11", "duration": 0.0010104179382324219, "run_index": 2, "setup": {"name": "setup", "duration": 0.00027370452880859375, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00025963783264160156, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_11>\n\n    def test_program_11(self):\n        'elisioni sessanta-otto, cinquanta-otto, quaranta-otto, trenta-otto'\n        num      = 68258148238\n        expected = 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:105: in conv\n    return conv(n/10000000000)+'miliardi'+conv(n%10000000000)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nn = 6.8258148238\n\n    def conv (n):\n        l= {28:'ventotto', 38:'trentotto', 48:'quarantotto', 58:'cinquantotto', 68:'sessantotto', 78:'settantotto', 88:'ottantotto', 98:'novantotto', 99:'novantanove', 1:'uno', 2:'due', 3:'tre', 4:'quattro', 5:'cinque', 6:'sei', 7:'sette', 8:'otto', 9:'nove', 10:'dieci', 11:'undici', 12:'dodici', 13:'tredici', 14:'quattordici', 15:'quindici', 16:'sedici', 17:'diciassette', 18:'diciotto', 19:'diciannove', 20:'venti', 30:'trenta', 40:'quaranta', 50:'cinquanta', 60:'sessanta', 70:'settanta', 80:'ottanta', 90:'novanta', 100:'cento', 0:'zero', 21:'ventuno', 31:'trentuno', 41:'quarantuno', 51:'cinquantuno', 61:'sessantuno', 71:'settantuno', 81:'ottantuno', 91:'novantuno', 1000:'mille'}\n        assert (0<= n)\n        if(n<=20):\n>           return l[n]\nE           KeyError: 6.8258148238\n\nprogram02.py:38: KeyError"}, "teardown": {"name": "teardown", "duration": 0.0002033710479736328, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_12", "duration": 0.0009791851043701172, "run_index": 3, "setup": {"name": "setup", "duration": 0.00026297569274902344, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00024962425231933594, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_12>\n\n    def test_program_12(self):\n        'elisioni ottanta-uno,settanta-uno,novanta-uno, venti-uno'\n        num      = 81071091021\n        expected = 'ottantunomiliardisettantunomilioninovantunomilaventuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:105: in conv\n    return conv(n/10000000000)+'miliardi'+conv(n%10000000000)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nn = 8.1071091021\n\n    def conv (n):\n        l= {28:'ventotto', 38:'trentotto', 48:'quarantotto', 58:'cinquantotto', 68:'sessantotto', 78:'settantotto', 88:'ottantotto', 98:'novantotto', 99:'novantanove', 1:'uno', 2:'due', 3:'tre', 4:'quattro', 5:'cinque', 6:'sei', 7:'sette', 8:'otto', 9:'nove', 10:'dieci', 11:'undici', 12:'dodici', 13:'tredici', 14:'quattordici', 15:'quindici', 16:'sedici', 17:'diciassette', 18:'diciotto', 19:'diciannove', 20:'venti', 30:'trenta', 40:'quaranta', 50:'cinquanta', 60:'sessanta', 70:'settanta', 80:'ottanta', 90:'novanta', 100:'cento', 0:'zero', 21:'ventuno', 31:'trentuno', 41:'quarantuno', 51:'cinquantuno', 61:'sessantuno', 71:'settantuno', 81:'ottantuno', 91:'novantuno', 1000:'mille'}\n        assert (0<= n)\n        if(n<=20):\n>           return l[n]\nE           KeyError: 8.1071091021\n\nprogram02.py:38: KeyError"}, "teardown": {"name": "teardown", "duration": 0.00020360946655273438, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_13", "duration": 0.0009748935699462891, "run_index": 4, "setup": {"name": "setup", "duration": 0.00026345252990722656, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002474784851074219, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_13>\n\n    def test_program_13(self):\n        'numeri speciali tra 10 e 20'\n        num      = 11012013014\n        expected = 'undicimiliardidodicimilionitredicimilaquattordici'\n>       return self.dotest02(num, expected)\n\ngrade02.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:105: in conv\n    return conv(n/10000000000)+'miliardi'+conv(n%10000000000)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nn = 1.1012013014\n\n    def conv (n):\n        l= {28:'ventotto', 38:'trentotto', 48:'quarantotto', 58:'cinquantotto', 68:'sessantotto', 78:'settantotto', 88:'ottantotto', 98:'novantotto', 99:'novantanove', 1:'uno', 2:'due', 3:'tre', 4:'quattro', 5:'cinque', 6:'sei', 7:'sette', 8:'otto', 9:'nove', 10:'dieci', 11:'undici', 12:'dodici', 13:'tredici', 14:'quattordici', 15:'quindici', 16:'sedici', 17:'diciassette', 18:'diciotto', 19:'diciannove', 20:'venti', 30:'trenta', 40:'quaranta', 50:'cinquanta', 60:'sessanta', 70:'settanta', 80:'ottanta', 90:'novanta', 100:'cento', 0:'zero', 21:'ventuno', 31:'trentuno', 41:'quarantuno', 51:'cinquantuno', 61:'sessantuno', 71:'settantuno', 81:'ottantuno', 91:'novantuno', 1000:'mille'}\n        assert (0<= n)\n        if(n<=20):\n>           return l[n]\nE           KeyError: 1.1012013014\n\nprogram02.py:38: KeyError"}, "teardown": {"name": "teardown", "duration": 0.00020051002502441406, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_14", "duration": 0.0009849071502685547, "run_index": 5, "setup": {"name": "setup", "duration": 0.0002646446228027344, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00025391578674316406, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_14>\n\n    def test_program_14(self):\n        'numero massimo da convertire'\n        num      = 99999999999\n        expected = 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'\n>       return self.dotest02(num, expected)\n\ngrade02.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:105: in conv\n    return conv(n/10000000000)+'miliardi'+conv(n%10000000000)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nn = 9.9999999999\n\n    def conv (n):\n        l= {28:'ventotto', 38:'trentotto', 48:'quarantotto', 58:'cinquantotto', 68:'sessantotto', 78:'settantotto', 88:'ottantotto', 98:'novantotto', 99:'novantanove', 1:'uno', 2:'due', 3:'tre', 4:'quattro', 5:'cinque', 6:'sei', 7:'sette', 8:'otto', 9:'nove', 10:'dieci', 11:'undici', 12:'dodici', 13:'tredici', 14:'quattordici', 15:'quindici', 16:'sedici', 17:'diciassette', 18:'diciotto', 19:'diciannove', 20:'venti', 30:'trenta', 40:'quaranta', 50:'cinquanta', 60:'sessanta', 70:'settanta', 80:'ottanta', 90:'novanta', 100:'cento', 0:'zero', 21:'ventuno', 31:'trentuno', 41:'quarantuno', 51:'cinquantuno', 61:'sessantuno', 71:'settantuno', 81:'ottantuno', 91:'novantuno', 1000:'mille'}\n        assert (0<= n)\n        if(n<=20):\n>           return l[n]\nE           KeyError: 9.9999999999\n\nprogram02.py:38: KeyError"}, "teardown": {"name": "teardown", "duration": 0.00020170211791992188, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_2", "duration": 0.0010042190551757812, "run_index": 6, "setup": {"name": "setup", "duration": 0.0002925395965576172, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002307891845703125, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018835067749023438, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_3", "duration": 0.0009248256683349609, "run_index": 7, "setup": {"name": "setup", "duration": 0.0002560615539550781, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00022721290588378906, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018548965454101562, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_4", "duration": 0.0009229183197021484, "run_index": 8, "setup": {"name": "setup", "duration": 0.000255584716796875, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00022649765014648438, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018525123596191406, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_5", "duration": 0.0009284019470214844, "run_index": 9, "setup": {"name": "setup", "duration": 0.00025653839111328125, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002315044403076172, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001838207244873047, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_6", "duration": 0.0009510517120361328, "run_index": 10, "setup": {"name": "setup", "duration": 0.0002582073211669922, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00022864341735839844, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00020599365234375, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_7", "duration": 0.0009610652923583984, "run_index": 11, "setup": {"name": "setup", "duration": 0.00025391578674316406, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002694129943847656, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001838207244873047, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_8", "duration": 0.0017702579498291016, "run_index": 12, "setup": {"name": "setup", "duration": 0.0002548694610595703, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0010590553283691406, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_8>\n\n    def test_program_8(self):\n        \"elisioni 800-80 e 80-8\"\n        num      = 888888888\n        expected = 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto' != 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\nE   - ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto\nE   ?         -                          -                      -\nE   + ottocentottantottomilioniottocentottantottomilaottocentottantotto\nE    : \twhen input=(888888888,) \nE   \t\t'ottocentoottantottomilioniottocentoottantottomilaottocentoottantotto' != 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002014636993408203, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_9", "duration": 0.0013294219970703125, "run_index": 13, "setup": {"name": "setup", "duration": 0.00026154518127441406, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002675056457519531, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_9>\n\n    def test_program_9(self):\n        'non elisioni 800-8 e elisioni 800-80'\n        num      = 808080808080\n        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\n>       return self.dotest02(num, expected)\n\ngrade02.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: None != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta' : \twhen input=(808080808080,) \nE   \t\tNone != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0005388259887695312, "outcome": "passed"}, "outcome": "failed"}], "summary": {"passed": 7, "failed": 7, "num_tests": 14, "duration": 0.16469049453735352}, "created_at": "2018-08-01 00:31:06.281292"}}