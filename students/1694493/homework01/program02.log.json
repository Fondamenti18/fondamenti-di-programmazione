{"report": {"environment": {"Python": "3.6.3", "Platform": "Linux-4.14.12-041412-generic-x86_64-with-debian-jessie-sid"}, "tests": [{"name": "grade02.py::Test::test_program_1", "duration": 0.0032660961151123047, "run_index": 0, "setup": {"name": "setup", "duration": 0.0013375282287597656, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002605915069580078, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0003304481506347656, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_10", "duration": 0.0017123222351074219, "run_index": 1, "setup": {"name": "setup", "duration": 0.0002655982971191406, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0009276866912841797, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_10>\n\n    def test_program_10(self):\n        'non elisioni 800-1 e elisioni 80-1'\n        num      = 801081801081\n        expected = 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'ottocentodieciunomiliardicentoottantunomilioniottocentunomilaottantuno' != 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\nE   - ottocentodieciunomiliardicentoottantunomilioniottocentunomilaottantuno\nE   ?          -----           -----\nE   + ottocentounomiliardiottantunomilioniottocentounomilaottantuno\nE   ?                                             +\nE    : \twhen input=(801081801081,) \nE   \t\t'ottocentodieciunomiliardicentoottantunomilioniottocentunomilaottantuno' != 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00025343894958496094, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_11", "duration": 0.0019850730895996094, "run_index": 2, "setup": {"name": "setup", "duration": 0.00030112266540527344, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0011699199676513672, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_11>\n\n    def test_program_11(self):\n        'elisioni sessanta-otto, cinquanta-otto, quaranta-otto, trenta-otto'\n        num      = 68258148238\n        expected = 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'sessantaottomiliardiduecentocinquantaottomilioni[35 chars]otto' != 'sessantottomiliardiduecentocinquantottomilionice[31 chars]otto'\nE   - sessantaottomiliardiduecentocinquantaottomilionicentoquarantaottomiladuecentotrentaotto\nE   ?        -                            -                       -                     -\nE   + sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto\nE    : \twhen input=(68258148238,) \nE   \t\t'sessantaottomiliardiduecentocinquantaottomilionicentoquarantaottomiladuecentotrentaotto' != 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002129077911376953, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_12", "duration": 0.0014903545379638672, "run_index": 3, "setup": {"name": "setup", "duration": 0.0002777576446533203, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0007185935974121094, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_12>\n\n    def test_program_12(self):\n        'elisioni ottanta-uno,settanta-uno,novanta-uno, venti-uno'\n        num      = 81071091021\n        expected = 'ottantunomiliardisettantunomilioninovantunomilaventuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'ottantunomiliardicentosettantunomilioninovantunomilaventiuno' != 'ottantunomiliardisettantunomilioninovantunomilaventuno'\nE   - ottantunomiliardicentosettantunomilioninovantunomilaventiuno\nE   ?                  -----                                  -\nE   + ottantunomiliardisettantunomilioninovantunomilaventuno\nE    : \twhen input=(81071091021,) \nE   \t\t'ottantunomiliardicentosettantunomilioninovantunomilaventiuno' != 'ottantunomiliardisettantunomilioninovantunomilaventuno'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002162456512451172, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_13", "duration": 0.0014967918395996094, "run_index": 4, "setup": {"name": "setup", "duration": 0.0002770423889160156, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0007369518280029297, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_13>\n\n    def test_program_13(self):\n        'numeri speciali tra 10 e 20'\n        num      = 11012013014\n        expected = 'undicimiliardidodicimilionitredicimilaquattordici'\n>       return self.dotest02(num, expected)\n\ngrade02.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'undicimiliardicentodieciduemilionitredicimilaquattordici' != 'undicimiliardidodicimilionitredicimilaquattordici'\nE   - undicimiliardicentodieciduemilionitredicimilaquattordici\nE   ?               ^^^^   -  ---\nE   + undicimiliardidodicimilionitredicimilaquattordici\nE   ?               ^\nE    : \twhen input=(11012013014,) \nE   \t\t'undicimiliardicentodieciduemilionitredicimilaquattordici' != 'undicimiliardidodicimilionitredicimilaquattordici'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00020575523376464844, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_14", "duration": 0.0010385513305664062, "run_index": 5, "setup": {"name": "setup", "duration": 0.0002675056457519531, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0003159046173095703, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001876354217529297, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_2", "duration": 0.0009691715240478516, "run_index": 6, "setup": {"name": "setup", "duration": 0.00028228759765625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002181529998779297, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018644332885742188, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_3", "duration": 0.0011801719665527344, "run_index": 7, "setup": {"name": "setup", "duration": 0.00025653839111328125, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00042891502380371094, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_3>\n\n    def test_program_3(self):\n        \"non-elisione del cento e elisione del venti-otto\"\n        num      = 128\n        expected = 'centoventotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'centoventiotto' != 'centoventotto'\nE   - centoventiotto\nE   ?          -\nE   + centoventotto\nE    : \twhen input=(128,) \nE   \t\t'centoventiotto' != 'centoventotto'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00023818016052246094, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_4", "duration": 0.0009672641754150391, "run_index": 8, "setup": {"name": "setup", "duration": 0.0002684593200683594, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002429485321044922, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018739700317382812, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_5", "duration": 0.0011680126190185547, "run_index": 9, "setup": {"name": "setup", "duration": 0.0002567768096923828, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00044274330139160156, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_5>\n\n    def test_program_5(self):\n        \"non-elisione del mille e del cento\"\n        num      = 1501\n        expected = 'millecinquecentouno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'millecinquecentuno' != 'millecinquecentouno'\nE   - millecinquecentuno\nE   + millecinquecentouno\nE   ?                +\nE    : \twhen input=(1501,) \nE   \t\t'millecinquecentuno' != 'millecinquecentouno'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002117156982421875, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_6", "duration": 0.000978708267211914, "run_index": 10, "setup": {"name": "setup", "duration": 0.00026869773864746094, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002543926239013672, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000186920166015625, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_7", "duration": 0.0015208721160888672, "run_index": 11, "setup": {"name": "setup", "duration": 0.000255584716796875, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0007927417755126953, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_7>\n\n    def test_program_7(self):\n        \"numero grande con molte elisioni e non-elisioni\"\n        num      = 981008818\n        expected = 'novecentottantunomilioniottomilaottocentodiciotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'novecentoottantunmilioneottomilaottocentodiciotto' != 'novecentottantunomilioniottomilaottocentodiciotto'\nE   - novecentoottantunmilioneottomilaottocentodiciotto\nE   ?          -             ^\nE   + novecentottantunomilioniottomilaottocentodiciotto\nE   ?                 +      ^\nE    : \twhen input=(981008818,) \nE   \t\t'novecentoottantunmilioneottomilaottocentodiciotto' != 'novecentottantunomilioniottomilaottocentodiciotto'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00021696090698242188, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_8", "duration": 0.001951456069946289, "run_index": 12, "setup": {"name": "setup", "duration": 0.000270843505859375, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0012018680572509766, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_8>\n\n    def test_program_8(self):\n        \"elisioni 800-80 e 80-8\"\n        num      = 888888888\n        expected = 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'ottocentoottantaottomilioniottocentoottantaottomilaottocentoottantaotto' != 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\nE   - ottocentoottantaottomilioniottocentoottantaottomilaottocentoottantaotto\nE   ?          -     -                    -     -                 -     -\nE   + ottocentottantottomilioniottocentottantottomilaottocentottantotto\nE    : \twhen input=(888888888,) \nE   \t\t'ottocentoottantaottomilioniottocentoottantaottomilaottocentoottantaotto' != 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002079010009765625, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_9", "duration": 0.0020105838775634766, "run_index": 13, "setup": {"name": "setup", "duration": 0.0002720355987548828, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0008890628814697266, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_9>\n\n    def test_program_9(self):\n        'non elisioni 800-8 e elisioni 800-80'\n        num      = 808080808080\n        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\n>       return self.dotest02(num, expected)\n\ngrade02.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'ottocentoottantaottomiliardicentoottantamilioniottocentoottomilaottanta' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\nE   - ottocentoottantaottomiliardicentoottantamilioniottocentoottomilaottanta\nE   ?             -------         -----\nE   + ottocentoottomiliardiottantamilioniottocentoottomilaottanta\nE    : \twhen input=(808080808080,) \nE   \t\t'ottocentoottantaottomiliardicentoottantamilioniottocentoottomilaottanta' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0005774497985839844, "outcome": "passed"}, "outcome": "failed"}], "summary": {"passed": 5, "failed": 9, "num_tests": 14, "duration": 0.17740249633789062}, "created_at": "2018-08-01 00:29:06.648927"}}