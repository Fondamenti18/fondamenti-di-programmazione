{"report": {"environment": {"Python": "3.6.3", "Platform": "Linux-4.14.12-041412-generic-x86_64-with-debian-jessie-sid"}, "tests": [{"name": "grade02.py::Test::test_program_1", "duration": 0.004068613052368164, "run_index": 0, "setup": {"name": "setup", "duration": 0.001744985580444336, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002651214599609375, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0003135204315185547, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_10", "duration": 0.001146078109741211, "run_index": 1, "setup": {"name": "setup", "duration": 0.0002627372741699219, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0003674030303955078, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_10>\n\n    def test_program_10(self):\n        'non elisioni 800-1 e elisioni 80-1'\n        num      = 801081801081\n        expected = 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: '' != 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\nE   + ottocentounomiliardiottantunomilioniottocentounomilaottantuno : \twhen input=(801081801081,) \nE   \t\t'' != 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002532005310058594, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_11", "duration": 0.0019404888153076172, "run_index": 2, "setup": {"name": "setup", "duration": 0.0005860328674316406, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0004856586456298828, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_11>\n\n    def test_program_11(self):\n        'elisioni sessanta-otto, cinquanta-otto, quaranta-otto, trenta-otto'\n        num      = 68258148238\n        expected = 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: '' != 'sessantottomiliardiduecentocinquantottomi[38 chars]otto'\nE   + sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto : \twhen input=(68258148238,) \nE   \t\t'' != 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002827644348144531, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_12", "duration": 0.0011243820190429688, "run_index": 3, "setup": {"name": "setup", "duration": 0.0002911090850830078, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0003364086151123047, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_12>\n\n    def test_program_12(self):\n        'elisioni ottanta-uno,settanta-uno,novanta-uno, venti-uno'\n        num      = 81071091021\n        expected = 'ottantunomiliardisettantunomilioninovantunomilaventuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: '' != 'ottantunomiliardisettantunomilioninovantunomilaventuno'\nE   + ottantunomiliardisettantunomilioninovantunomilaventuno : \twhen input=(81071091021,) \nE   \t\t'' != 'ottantunomiliardisettantunomilioninovantunomilaventuno'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00020575523376464844, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_13", "duration": 0.0012183189392089844, "run_index": 4, "setup": {"name": "setup", "duration": 0.0002701282501220703, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0004451274871826172, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_13>\n\n    def test_program_13(self):\n        'numeri speciali tra 10 e 20'\n        num      = 11012013014\n        expected = 'undicimiliardidodicimilionitredicimilaquattordici'\n>       return self.dotest02(num, expected)\n\ngrade02.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: '' != 'undicimiliardidodicimilionitredicimilaquattordici'\nE   + undicimiliardidodicimilionitredicimilaquattordici : \twhen input=(11012013014,) \nE   \t\t'' != 'undicimiliardidodicimilionitredicimilaquattordici'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00023293495178222656, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_14", "duration": 0.001125335693359375, "run_index": 5, "setup": {"name": "setup", "duration": 0.00028395652770996094, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0003478527069091797, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_14>\n\n    def test_program_14(self):\n        'numero massimo da convertire'\n        num      = 99999999999\n        expected = 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'\n>       return self.dotest02(num, expected)\n\ngrade02.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: '' != 'novantanovemiliardinovecentonovantanovemi[45 chars]nove'\nE   + novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove : \twhen input=(99999999999,) \nE   \t\t'' != 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00020956993103027344, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_2", "duration": 0.0009598731994628906, "run_index": 6, "setup": {"name": "setup", "duration": 0.00027179718017578125, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00023102760314941406, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018525123596191406, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_3", "duration": 0.0011119842529296875, "run_index": 7, "setup": {"name": "setup", "duration": 0.000339508056640625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00024628639221191406, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018668174743652344, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_4", "duration": 0.0009996891021728516, "run_index": 8, "setup": {"name": "setup", "duration": 0.0002913475036621094, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002269744873046875, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001900196075439453, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_5", "duration": 0.0009181499481201172, "run_index": 9, "setup": {"name": "setup", "duration": 0.0002529621124267578, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002288818359375, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018334388732910156, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_6", "duration": 0.0009608268737792969, "run_index": 10, "setup": {"name": "setup", "duration": 0.0002543926239013672, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002307891845703125, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00022125244140625, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_7", "duration": 0.0009427070617675781, "run_index": 11, "setup": {"name": "setup", "duration": 0.0002536773681640625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002512931823730469, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018405914306640625, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_8", "duration": 0.0009319782257080078, "run_index": 12, "setup": {"name": "setup", "duration": 0.00025200843811035156, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002455711364746094, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001823902130126953, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_9", "duration": 0.0013878345489501953, "run_index": 13, "setup": {"name": "setup", "duration": 0.00025391578674316406, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00031495094299316406, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_9>\n\n    def test_program_9(self):\n        'non elisioni 800-8 e elisioni 800-80'\n        num      = 808080808080\n        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\n>       return self.dotest02(num, expected)\n\ngrade02.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: '' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\nE   + ottocentoottomiliardiottantamilioniottocentoottomilaottanta : \twhen input=(808080808080,) \nE   \t\t'' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0005650520324707031, "outcome": "passed"}, "outcome": "failed"}], "summary": {"passed": 8, "failed": 6, "num_tests": 14, "duration": 0.15415048599243164}, "created_at": "2018-08-01 00:28:54.412953"}}