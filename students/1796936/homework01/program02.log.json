{"report": {"environment": {"Python": "3.6.3", "Platform": "Linux-4.14.12-041412-generic-x86_64-with-debian-jessie-sid"}, "tests": [{"name": "grade02.py::Test::test_program_1", "duration": 0.003501415252685547, "run_index": 0, "setup": {"name": "setup", "duration": 0.0014986991882324219, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002903938293457031, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000213623046875, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_10", "duration": 0.0036652088165283203, "run_index": 1, "setup": {"name": "setup", "duration": 0.00036716461181640625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0026412010192871094, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_10>\n\n    def test_program_10(self):\n        'non elisioni 800-1 e elisioni 80-1'\n        num      = 801081801081\n        expected = 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:67: in conv\n    return conv(n//10**9) + \"miliardi\" + conv(n%10**9)\nprogram02.py:63: in conv\n    return conv(n//10**6) + \"milioni\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.00028967857360839844, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_11", "duration": 0.004106283187866211, "run_index": 2, "setup": {"name": "setup", "duration": 0.00032711029052734375, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0031735897064208984, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_11>\n\n    def test_program_11(self):\n        'elisioni sessanta-otto, cinquanta-otto, quaranta-otto, trenta-otto'\n        num      = 68258148238\n        expected = 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:67: in conv\n    return conv(n//10**9) + \"miliardi\" + conv(n%10**9)\nprogram02.py:63: in conv\n    return conv(n//10**6) + \"milioni\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.000278472900390625, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_12", "duration": 0.0011124610900878906, "run_index": 3, "setup": {"name": "setup", "duration": 0.00031876564025878906, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002796649932861328, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001952648162841797, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_13", "duration": 0.0009937286376953125, "run_index": 4, "setup": {"name": "setup", "duration": 0.0002772808074951172, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002505779266357422, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018858909606933594, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_14", "duration": 0.0030133724212646484, "run_index": 5, "setup": {"name": "setup", "duration": 0.0002608299255371094, "outcome": "passed"}, "call": {"name": "call", "duration": 0.002211332321166992, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_14>\n\n    def test_program_14(self):\n        'numero massimo da convertire'\n        num      = 99999999999\n        expected = 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'\n>       return self.dotest02(num, expected)\n\ngrade02.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:67: in conv\n    return conv(n//10**9) + \"miliardi\" + conv(n%10**9)\nprogram02.py:63: in conv\n    return conv(n//10**6) + \"milioni\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.0002803802490234375, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_2", "duration": 0.0011394023895263672, "run_index": 6, "setup": {"name": "setup", "duration": 0.00033354759216308594, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002741813659667969, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00019812583923339844, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_3", "duration": 0.0009667873382568359, "run_index": 7, "setup": {"name": "setup", "duration": 0.00026798248291015625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00023603439331054688, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00019478797912597656, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_4", "duration": 0.0010187625885009766, "run_index": 8, "setup": {"name": "setup", "duration": 0.0002639293670654297, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002841949462890625, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0002067089080810547, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_5", "duration": 0.0011734962463378906, "run_index": 9, "setup": {"name": "setup", "duration": 0.0002815723419189453, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0003688335418701172, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0002415180206298828, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_6", "duration": 0.0009920597076416016, "run_index": 10, "setup": {"name": "setup", "duration": 0.0002658367156982422, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002658367156982422, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000194549560546875, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_7", "duration": 0.0009579658508300781, "run_index": 11, "setup": {"name": "setup", "duration": 0.000263214111328125, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00024271011352539062, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001888275146484375, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_8", "duration": 0.002852916717529297, "run_index": 12, "setup": {"name": "setup", "duration": 0.000286102294921875, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0020008087158203125, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_8>\n\n    def test_program_8(self):\n        \"elisioni 800-80 e 80-8\"\n        num      = 888888888\n        expected = 'ottocentottantottomilioniottocentottantottomilaottocentottantotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:63: in conv\n    return conv(n//10**6) + \"milioni\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.0002799034118652344, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_9", "duration": 0.004302978515625, "run_index": 13, "setup": {"name": "setup", "duration": 0.0003116130828857422, "outcome": "passed"}, "call": {"name": "call", "duration": 0.003024578094482422, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_9>\n\n    def test_program_9(self):\n        'non elisioni 800-8 e elisioni 800-80'\n        num      = 808080808080\n        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\n>       return self.dotest02(num, expected)\n\ngrade02.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:67: in conv\n    return conv(n//10**9) + \"miliardi\" + conv(n%10**9)\nprogram02.py:63: in conv\n    return conv(n//10**6) + \"milioni\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nprogram02.py:61: in conv\n    return \"unmilione\" + conv(n%10**6)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.0006551742553710938, "outcome": "passed"}, "outcome": "failed"}], "summary": {"passed": 9, "failed": 5, "num_tests": 14, "duration": 0.2856473922729492}, "created_at": "2018-08-01 00:30:04.008073"}}