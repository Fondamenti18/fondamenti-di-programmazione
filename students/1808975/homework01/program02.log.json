{"report": {"environment": {"Python": "3.6.3", "Platform": "Linux-4.14.12-041412-generic-x86_64-with-debian-jessie-sid"}, "tests": [{"name": "grade02.py::Test::test_program_1", "duration": 0.003078460693359375, "run_index": 0, "setup": {"name": "setup", "duration": 0.0013089179992675781, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002598762512207031, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00020074844360351562, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_10", "duration": 0.0041387081146240234, "run_index": 1, "setup": {"name": "setup", "duration": 0.00026345252990722656, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0032377243041992188, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_10>\n\n    def test_program_10(self):\n        'non elisioni 800-1 e elisioni 80-1'\n        num      = 801081801081\n        expected = 'ottocentounomiliardiottantunomilioniottocentounomilaottantuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:70: in conv\n    return \"un bilione\" + conv(n%1000000000000)\nprogram02.py:70: in conv\n    return \"un bilione\" + conv(n%1000000000000)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.00037407875061035156, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_11", "duration": 0.004205942153930664, "run_index": 2, "setup": {"name": "setup", "duration": 0.0002753734588623047, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0034503936767578125, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_11>\n\n    def test_program_11(self):\n        'elisioni sessanta-otto, cinquanta-otto, quaranta-otto, trenta-otto'\n        num      = 68258148238\n        expected = 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:68: in conv\n    return \"centomiliardi\" + conv(n%100000000000)\nprogram02.py:68: in conv\n    return \"centomiliardi\" + conv(n%100000000000)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.0002048015594482422, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_12", "duration": 0.012257575988769531, "run_index": 3, "setup": {"name": "setup", "duration": 0.0002644062042236328, "outcome": "passed"}, "call": {"name": "call", "duration": 0.011507272720336914, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_12>\n\n    def test_program_12(self):\n        'elisioni ottanta-uno,settanta-uno,novanta-uno, venti-uno'\n        num      = 81071091021\n        expected = 'ottantunomiliardisettantunomilioninovantunomilaventuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:68: in conv\n    return \"centomiliardi\" + conv(n%100000000000)\nprogram02.py:68: in conv\n    return \"centomiliardi\" + conv(n%100000000000)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.00022149085998535156, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_13", "duration": 0.0014526844024658203, "run_index": 4, "setup": {"name": "setup", "duration": 0.0002753734588623047, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0006990432739257812, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_13>\n\n    def test_program_13(self):\n        'numeri speciali tra 10 e 20'\n        num      = 11012013014\n        expected = 'undicimiliardidodicimilionitredicimilaquattordici'\n>       return self.dotest02(num, expected)\n\ngrade02.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'diecimiliardiun miliardododicimilionitredicimilaquattordici' != 'undicimiliardidodicimilionitredicimilaquattordici'\nE   - diecimiliardiun miliardododicimilionitredicimilaquattordici\nE   ?   -          -----------\nE   + undicimiliardidodicimilionitredicimilaquattordici\nE   ? ++\nE    : \twhen input=(11012013014,) \nE   \t\t'diecimiliardiun miliardododicimilionitredicimilaquattordici' != 'undicimiliardidodicimilionitredicimilaquattordici'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002028942108154297, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_14", "duration": 0.0035707950592041016, "run_index": 5, "setup": {"name": "setup", "duration": 0.00029397010803222656, "outcome": "passed"}, "call": {"name": "call", "duration": 0.002774477005004883, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_14>\n\n    def test_program_14(self):\n        'numero massimo da convertire'\n        num      = 99999999999\n        expected = 'novantanovemiliardinovecentonovantanovemilioninovecentonovantanovemilanovecentonovantanove'\n>       return self.dotest02(num, expected)\n\ngrade02.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:68: in conv\n    return \"centomiliardi\" + conv(n%100000000000)\nprogram02.py:68: in conv\n    return \"centomiliardi\" + conv(n%100000000000)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.00020837783813476562, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_2", "duration": 0.0009469985961914062, "run_index": 6, "setup": {"name": "setup", "duration": 0.0002658367156982422, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002281665802001953, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018715858459472656, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_3", "duration": 0.0009932518005371094, "run_index": 7, "setup": {"name": "setup", "duration": 0.00028777122497558594, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00023031234741210938, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018739700317382812, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_4", "duration": 0.0009267330169677734, "run_index": 8, "setup": {"name": "setup", "duration": 0.00025534629821777344, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00022840499877929688, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001876354217529297, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_5", "duration": 0.0009508132934570312, "run_index": 9, "setup": {"name": "setup", "duration": 0.0002543926239013672, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002288818359375, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00021314620971679688, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_6", "duration": 0.0009293556213378906, "run_index": 10, "setup": {"name": "setup", "duration": 0.00025653839111328125, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00023031234741210938, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018596649169921875, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_7", "duration": 0.0009315013885498047, "run_index": 11, "setup": {"name": "setup", "duration": 0.00025391578674316406, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002377033233642578, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018596649169921875, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_8", "duration": 0.0009403228759765625, "run_index": 12, "setup": {"name": "setup", "duration": 0.00025343894958496094, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00024819374084472656, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018525123596191406, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_9", "duration": 0.0037031173706054688, "run_index": 13, "setup": {"name": "setup", "duration": 0.0002543926239013672, "outcome": "passed"}, "call": {"name": "call", "duration": 0.002593994140625, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_9>\n\n    def test_program_9(self):\n        'non elisioni 800-8 e elisioni 800-80'\n        num      = 808080808080\n        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'\n>       return self.dotest02(num, expected)\n\ngrade02.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:12: in dotest02\n    ret  = program.conv(*args)\nprogram02.py:70: in conv\n    return \"un bilione\" + conv(n%1000000000000)\nprogram02.py:70: in conv\n    return \"un bilione\" + conv(n%1000000000000)\nE   RecursionError: maximum recursion depth exceeded in comparison\n!!! Recursion detected (same locals & position)"}, "teardown": {"name": "teardown", "duration": 0.0006003379821777344, "outcome": "passed"}, "outcome": "failed"}], "summary": {"passed": 8, "failed": 6, "num_tests": 14, "duration": 0.24960565567016602}, "created_at": "2018-08-01 00:30:42.778105"}}