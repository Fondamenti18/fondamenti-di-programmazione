============================= test session starts ==============================
platform linux -- Python 3.6.3, pytest-3.7.0, py-1.5.2, pluggy-0.7.1 -- /home/travis/virtualenv/python3.6.3/bin/python
cachedir: .pytest_cache
rootdir: /home/travis/build/Fondamenti18/fondamenti-di-programmazione/students/1811284/homework01, inifile:
plugins: timeout-1.3.1, json-0.4.0
timeout: 10.0s
timeout method: signal
timeout func_only: False
collecting ... collected 14 items

grade02.py::Test::test_program_1 PASSED                                  [  7%]
grade02.py::Test::test_program_10 PASSED                                 [ 14%]
grade02.py::Test::test_program_11 FAILED                                 [ 21%]
grade02.py::Test::test_program_12 PASSED                                 [ 28%]
grade02.py::Test::test_program_13 PASSED                                 [ 35%]
grade02.py::Test::test_program_14 PASSED                                 [ 42%]
grade02.py::Test::test_program_2 PASSED                                  [ 50%]
grade02.py::Test::test_program_3 FAILED                                  [ 57%]
grade02.py::Test::test_program_4 PASSED                                  [ 64%]
grade02.py::Test::test_program_5 PASSED                                  [ 71%]
grade02.py::Test::test_program_6 PASSED                                  [ 78%]
grade02.py::Test::test_program_7 PASSED                                  [ 85%]
grade02.py::Test::test_program_8 PASSED                                  [ 92%]
grade02.py::Test::test_program_9 FAILED                                  [100%]

=================================== FAILURES ===================================
_____________________________ Test.test_program_11 _____________________________

self = <grade02.Test testMethod=test_program_11>

    def test_program_11(self):
        'elisioni sessanta-otto, cinquanta-otto, quaranta-otto, trenta-otto'
        num      = 68258148238
        expected = 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'
>       return self.dotest02(num, expected)

grade02.py:82: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'sess[17 chars]ecentocinquantottomilionicentoottomiladuecentotrentotto' != 'sess[17 chars]ecentocinquantottomilionicentoquarantottomiladuecentotrentotto'
E   - sessantottomiliardiduecentocinquantottomilionicentoottomiladuecentotrentotto
E   + sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto
E   ?                                                    +++++++
E    : 	when input=(68258148238,) 
E   		'sessantottomiliardiduecentocinquantottomilionicentoottomiladuecentotrentotto' != 'sessantottomiliardiduecentocinquantottomilionicentoquarantottomiladuecentotrentotto'	<- correct return value
_____________________________ Test.test_program_3 ______________________________

self = <grade02.Test testMethod=test_program_3>

    def test_program_3(self):
        "non-elisione del cento e elisione del venti-otto"
        num      = 128
        expected = 'centoventotto'
>       return self.dotest02(num, expected)

grade02.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'centootto' != 'centoventotto'
E   - centootto
E   + centoventotto
E   ?      ++++
E    : 	when input=(128,) 
E   		'centootto' != 'centoventotto'	<- correct return value
_____________________________ Test.test_program_9 ______________________________

self = <grade02.Test testMethod=test_program_9>

    def test_program_9(self):
        'non elisioni 800-8 e elisioni 800-80'
        num      = 808080808080
        expected = 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'
>       return self.dotest02(num, expected)

grade02.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
grade02.py:13: in dotest02
    self.__check(ret,   expected_result, orig, 'return')
grade02.py:110: in __check
    self.assertEqual(value, expected, msg)
E   AssertionError: 'ottocentoottomiliardiottanta milioniottocentoottomilaottanta ' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'
E   - ottocentoottomiliardiottanta milioniottocentoottomilaottanta 
E   ?                             -                               -
E   + ottocentoottomiliardiottantamilioniottocentoottomilaottanta
E    : 	when input=(808080808080,) 
E   		'ottocentoottomiliardiottanta milioniottocentoottomilaottanta ' != 'ottocentoottomiliardiottantamilioniottocentoottomilaottanta'	<- correct return value
 generated json report: /home/travis/build/Fondamenti18/fondamenti-di-programmazione/students/1811284/homework01/program02.log.json 
===================== 3 failed, 11 passed in 0.11 seconds ======================
