{"report": {"environment": {"Python": "3.6.3", "Platform": "Linux-4.14.12-041412-generic-x86_64-with-debian-jessie-sid"}, "tests": [{"name": "grade02.py::Test::test_program_1", "duration": 0.0030975341796875, "run_index": 0, "setup": {"name": "setup", "duration": 0.0013127326965332031, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002655982971191406, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00020647048950195312, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_10", "duration": 0.0012047290802001953, "run_index": 1, "setup": {"name": "setup", "duration": 0.0003275871276855469, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0003573894500732422, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00019216537475585938, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_11", "duration": 0.0009586811065673828, "run_index": 2, "setup": {"name": "setup", "duration": 0.0002613067626953125, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00024700164794921875, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018906593322753906, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_12", "duration": 0.0009567737579345703, "run_index": 3, "setup": {"name": "setup", "duration": 0.00026345252990722656, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002396106719970703, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00019025802612304688, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_13", "duration": 0.0014262199401855469, "run_index": 4, "setup": {"name": "setup", "duration": 0.00025916099548339844, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0006988048553466797, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_13>\n\n    def test_program_13(self):\n        'numeri speciali tra 10 e 20'\n        num      = 11012013014\n        expected = 'undicimiliardidodicimilionitredicimilaquattordici'\n>       return self.dotest02(num, expected)\n\ngrade02.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'undicimiliardidodicimilionitredicimilatredici' != 'undicimiliardidodicimilionitredicimilaquattordici'\nE   - undicimiliardidodicimilionitredicimilatredici\nE   ?                                         -\nE   + undicimiliardidodicimilionitredicimilaquattordici\nE   ?                                       +++ ++\nE    : \twhen input=(11012013014,) \nE   \t\t'undicimiliardidodicimilionitredicimilatredici' != 'undicimiliardidodicimilionitredicimilaquattordici'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002090930938720703, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_14", "duration": 0.0009815692901611328, "run_index": 5, "setup": {"name": "setup", "duration": 0.00026988983154296875, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00025177001953125, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001900196075439453, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_2", "duration": 0.0010728836059570312, "run_index": 6, "setup": {"name": "setup", "duration": 0.00026035308837890625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00034689903259277344, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_2>\n\n    def test_program_2(self):\n        \"numero speciale tra 10 e 20\"\n        num      = 17\n        expected = 'diciassette'\n>       return self.dotest02(num, expected)\n\ngrade02.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'sedici' != 'diciassette'\nE   - sedici\nE   + diciassette\nE    : \twhen input=(17,) \nE   \t\t'sedici' != 'diciassette'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.0002052783966064453, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_3", "duration": 0.0009949207305908203, "run_index": 7, "setup": {"name": "setup", "duration": 0.00026869773864746094, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00023794174194335938, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00021958351135253906, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_4", "duration": 0.0009438991546630859, "run_index": 8, "setup": {"name": "setup", "duration": 0.00026106834411621094, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002319812774658203, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018978118896484375, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_5", "duration": 0.0009434223175048828, "run_index": 9, "setup": {"name": "setup", "duration": 0.00025963783264160156, "outcome": "passed"}, "call": {"name": "call", "duration": 0.00023365020751953125, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00019049644470214844, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_6", "duration": 0.0011780261993408203, "run_index": 10, "setup": {"name": "setup", "duration": 0.0002598762512207031, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0004520416259765625, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_6>\n\n    def test_program_6(self):\n        \"non-elisione del mille e elisione di 80\"\n        num      = 17081\n        expected = 'diciassettemilaottantuno'\n>       return self.dotest02(num, expected)\n\ngrade02.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'sedicimilaottantuno' != 'diciassettemilaottantuno'\nE   - sedicimilaottantuno\nE   ? --\nE   + diciassettemilaottantuno\nE   ?     +++++++\nE    : \twhen input=(17081,) \nE   \t\t'sedicimilaottantuno' != 'diciassettemilaottantuno'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00020623207092285156, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_7", "duration": 0.0013642311096191406, "run_index": 11, "setup": {"name": "setup", "duration": 0.00026798248291015625, "outcome": "passed"}, "call": {"name": "call", "duration": 0.000621795654296875, "outcome": "failed", "longrepr": "self = <grade02.Test testMethod=test_program_7>\n\n    def test_program_7(self):\n        \"numero grande con molte elisioni e non-elisioni\"\n        num      = 981008818\n        expected = 'novecentottantunomilioniottomilaottocentodiciotto'\n>       return self.dotest02(num, expected)\n\ngrade02.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngrade02.py:13: in dotest02\n    self.__check(ret,   expected_result, orig, 'return')\ngrade02.py:110: in __check\n    self.assertEqual(value, expected, msg)\nE   AssertionError: 'novecentottantunomilioniottomilaottocentodiciassette' != 'novecentottantunomilioniottomilaottocentodiciotto'\nE   - novecentottantunomilioniottomilaottocentodiciassette\nE   ?                                              ^^^^  ^\nE   + novecentottantunomilioniottomilaottocentodiciotto\nE   ?                                              ^  ^\nE    : \twhen input=(981008818,) \nE   \t\t'novecentottantunomilioniottomilaottocentodiciassette' != 'novecentottantunomilioniottomilaottocentodiciotto'\t<- correct return value"}, "teardown": {"name": "teardown", "duration": 0.00020647048950195312, "outcome": "passed"}, "outcome": "failed"}, {"name": "grade02.py::Test::test_program_8", "duration": 0.0009760856628417969, "run_index": 12, "setup": {"name": "setup", "duration": 0.00026917457580566406, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002472400665283203, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00019049644470214844, "outcome": "passed"}, "outcome": "passed"}, {"name": "grade02.py::Test::test_program_9", "duration": 0.0016074180603027344, "run_index": 13, "setup": {"name": "setup", "duration": 0.0003821849822998047, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0002899169921875, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000553131103515625, "outcome": "passed"}, "outcome": "passed"}], "summary": {"passed": 10, "failed": 4, "num_tests": 14, "duration": 0.12344956398010254}, "created_at": "2018-08-01 00:31:05.287157"}}